fastlane_version "2.59.0"

default_platform :ios

platform :ios do
  before_all do
    ENV["SLACK_URL"] = "https://hooks.slack.com/services/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"
    cocoapods
  end

  desc "Runs all the tests"
  lane :test do
    scan(
      scheme: "ELDebate",
      code_coverage: true
    )
  end

  desc "Submit a new Beta Build to Apple TestFlight"
  desc "This will also make sure the profile is up to date"
  lane :beta do
    ensure_git_status_clean
    increment_build_number(build_number: latest_testflight_build_number + 1)
    commit_version_bump
    scan(scheme: "ELDebate")
    match(type: "appstore")
    gym(scheme: "ELDebate", clean: true)
    pilot
    clean_build_artifacts
  end

  desc "Auto deployment script for Apple TestFlight"
  desc "Runs only for GH merge commits"
  lane :autodeploy do
    if pr = pull_request_number
      increment_build_number(build_number: latest_testflight_build_number + 1)
      password = SecureRandom.base64
      keychain_name = "fastlane"
      ENV["MATCH_KEYCHAIN_NAME"] = keychain_name
      ENV["MATCH_KEYCHAIN_PASSWORD"] = password

      create_keychain(
        name: keychain_name,
        default_keychain: true,
        unlock: true,
        timeout: 3600,
        lock_when_sleeps: true,
        password: password
      )

      match(
        type: "appstore",
        keychain_name: keychain_name,
        keychain_password: password,
        readonly: true
      )

      gym(scheme: "ELDebate", clean: true)
      pilot(skip_waiting_for_build_processing: true)
      clean_build_artifacts
      slack(message: "Successfully deployed EL Debate iOS #{pr} to TestFlight")
    end
  end

  # You can define as many lanes as you want

  after_all do |lane|
    # This block is called, only if the executed lane was successful

    # slack(
    #   message: "Successfully deployed new App Update."
    # )
  end
end
